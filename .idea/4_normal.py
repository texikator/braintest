
# Эти задачи необходимо решить используя регулярные выражения!

import re

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.

name = input("Введите имя: ")
surname =  input("Введите фамилию: ")
email = input("Введите адрес почты: ")

pattern_user = "(^[A-Z])([a-z])+"
pattern_email = "([a-z0-9_]+)@[a-z0-9]+\.(com|ru|org)"


user_data = {}
user_data['name'] = name
user_data['surname'] = surname
user_data['email'] = email

'''
if not re.match(pattern_email,email):
    print("Некорректный ввод адреса почты")
if not re.match(pattern_user,name):
    print("Некорректный ввод имени")
if not re.match(pattern_user,surname):
    print("Некорректный ввод фамилии")
'''

def check_user(**kwargs):
    result = ""
    #if kwargs.get('name'):
        #print(kwargs.get('name'))
    if not re.match(pattern_user, name):
        result += " Некорректное имя."
    if kwargs.get('surname'):
        if not re.match(pattern_user, surname):
            result += " Некорректная фамилия."
    if kwargs.get('email'):
        if not re.match(pattern_email, email):
            result +=" Некорректный адрес почты."
    if len(result) == 0:
        result = "Данные корректны"
    return  result

#search_result = re.search(pattern_email, email)

print(check_user(**user_data))


# Задача - 2:
# Вам дан текст:

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!

str_pattern = ".{7}\.{3}.{7}"
search_result = list(re.findall(str_pattern,some_str))
if len(search_result):
    print("найдены вхождения: ", len(search_result),": ", ", ".join(search_result))